services:
  db:
    image: postgres:16-alpine
    container_name: db
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
      POSTGRES_USER: ${POSTGRES_USER:-appuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-apppass}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-appuser} -d ${POSTGRES_DB:-appdb}"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
      target: dev
    container_name: backend
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL:-postgresql://appuser:apppass@db:5432/appdb}
      BACKEND_PORT: ${BACKEND_PORT:-8000}
      FRONTEND_ORIGIN: ${FRONTEND_ORIGIN:-http://localhost:5173}
      MODEL_DIR: /models
      HIST_DATA: /data/dataset_with_features.csv
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./ml-service/models:/models
      - ./backend/dataset_with_features.csv:/data/dataset_with_features.csv:ro
    ports:
      - "${BACKEND_PORT:-8000}:8000"

  frontend:
    build:
      context: ./frontend
      target: dev
    container_name: frontend
    env_file:
      - ./.env
    environment:
      VITE_API_URL: ${VITE_API_URL:-http://localhost:8000}
      CHOKIDAR_USEPOLLING: "true"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    ports:
      - "${FRONTEND_PORT:-5173}:5173"

volumes:
  db_data:
  frontend_node_modules: